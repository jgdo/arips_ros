#!/usr/bin/env python
# Arips Planner configuration

from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, double_t, int_t, bool_t

gen = ParameterGenerator()

gen.add("goal_tolerance_xy_m", double_t, 0, "Controller goal distance tolerance (m)", 0.1, 0.0, 0.5)
gen.add("goal_tolerance_yaw_deg", double_t, 0, "Controller goal yaw tolerance (deg)", 5, 0, 180)
gen.add("traj_sampling_duration_s", double_t, 0, "Trajectory sampling duration (s)", 0.8, 0.1, 5)
gen.add("traj_sampling_steps", int_t, 0, "Number of trajectory segments when sampling", 20, 3, 100)
gen.add("traj_curvature_range", double_t, 0, "Sampling will happen within curvature from [-range..range] with stepsize traj_curvature_stepsize", 20.0, 5.0, 100.0)
gen.add("traj_curvature_stepsize", double_t, 0, "Sampling will happen within curvature from [-range..range] with stepsize traj_curvature_stepsize", 0.5, 0.1, 2)

gen.add("angle_diff_rotate_in_place_deg", double_t, 0, "Rotate in place when current orientation deviates from optimal driving direction by this value", 45, 0.0, 180.0)

gen.add("acc_limit_m_s2", double_t, 0, "Acceleration limit (m/s^2)", 1.0, 0.1, 5.0)
gen.add("collision_lookahead_s", double_t, 0, "Choose velocity such that robot will definitely not collide when driving for this period of time", 0.5, 0.1, 2.0)

gen.add("robot_wheel_base_m", double_t, 0, "Distance between wheels (m)", 0.312, 0.0, 1.0)

exit(gen.generate("arips_navigation", "arips_navigation", "MotionController"))
